<?xml version="1.0"?>
<project name="Scriptographer" default="usage" basedir=".">
	<!-- =================================================================== -->
	<!-- Initializes some variables                                          -->
	<!-- =================================================================== -->
	<target name="init">
		<property name="Name" value="Scriptographer"/>
		<property name="version" value="0.2"/>
		<property name="project" value="scriptographer"/>
		<tstamp>
			<!-- get current year -->
			<format property="year" pattern="yyyy"/>
			<format property="date" pattern="yyyy_MM_dd"/>
		</tstamp>
		<property name="year" value="2001-${year}"/>
		<property name="scriptographer" value=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/scriptographer"/>
		<property name="cvs.apps.tag" value="HEAD"/>

		<property name="home.dir" value="../.."/>
		<property name="build.dir" value="${home.dir}/build/java/build"/>
		<property name="build.src" value="${home.dir}/src/java"/>
		<property name="build.lib" value="${build.dir}/lib"/>
		<property name="build.jni" value="${home.dir}/src/cpp/jni"/>
		<property name="build.classes" value="${build.dir}/classes"/>
		<property name="build.packages" value="${home.dir}/build/packages"/>

		<property name="docs.dir" value="${home.dir}/docs"/>
		<property name="docs.api.dir" value="${docs.dir}/api"/>
		<property name="docs.js.dir" id="docs.js.dir" value="${docs.dir}/js"/>
		<property name="docs.js.templates.dir" id="docs.js.templates.dir" value="${docs.dir}/templates"/>

		<!-- this is used for importing comments from the gnu classpath file into the js documentation -->
		<property name="build.src.jdk" value="${home.dir}/docs/src/"/>
		
		<!-- The path to the install directory within Illustrator -->
		<property name="install.dir" value="C:\Programme\Adobe\Illustrator CS\Plug-ins\Extensions\Scriptographer\java"/>
		<property name="install.lib" value="${install.dir}/lib"/>
		<property name="install.classes" value="${install.dir}/classes"/>

		<property name="jar.name" value="${project}"/>
		<property name="package.name" value="${project}-${version}"/>

		<property name="debug" value="on"/>
		<property name="optimize" value="on"/>
		<property name="deprecation" value="off"/>

		<path id="build.classpath">
			<fileset dir="${build.dir}/lib">
				<exclude name="**/scriptographer*.jar" />
				<include name="**/*.jar" />
			</fileset>
		</path>
		
		<path id="build.sourcepath" >
			<pathelement location="${build.src}" />
			<pathelement location="${build.src.jdk}" />
		</path>
	</target>


	<!-- =================================================================== -->
	<!-- Help on usage                                                       -->
	<!-- =================================================================== -->
	<target name="help" depends="usage" />
	<target name="usage">
		<echo message=""/>
		<echo message=""/>
		<echo message="Scriptographer build instructions"/>
		<echo message="-------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=" available targets are:"/>
		<echo message=""/>
		<echo message=" compile    --> compiles the source code to ./classes"/>
		<echo message=" jar        --> generates the ./lib/scriptographer.jar file"/>
		<echo message=" install    --> installs the jar files in the Adobe Illustrator directory "/>
		<echo message=" jni        --> generates jni headers and registerNatives.cpp in ./jni/"/>
		<echo message=" jnibodies  --> generates empty jni bodies in ./jni/"/>
		<echo message=" javadocs   --> generates the API docs"/>
		<echo message=" docs       --> tries to retrieve the HTML documentation "/>
		<echo message="                (may need proxy settings in startscript)"/>
		<echo message=""/>
		<echo message=" usage	      --> provides help on using the build tool (default)"/>
		<echo message=""/>
		<echo message=" See comments inside the build.xml file for more details."/>
		<echo message="-------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=""/>
	</target>


	<!-- =================================================================== -->
	<!-- Compiles the source directory                                       -->
	<!-- =================================================================== -->
	<target name="compile" depends="init">
		<mkdir dir="${build.classes}"/>
		<!-- copy the icc profiles -->
		<copy todir="${build.classes}/com/scriptographer/cmm">
			<fileset dir="${build.src}/com/scriptographer/cmm">
				<include name="**/*.icc" />
			</fileset>
		</copy>
		<!-- copy the gui resources -->
		<copy todir="${build.classes}/com/scriptographer/gui/resources">
			<fileset dir="${build.src}/com/scriptographer/gui/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<javac srcdir="${build.src}"
			destdir="${build.classes}"
			debug="${debug}"
			deprecation="${deprecation}"
			optimize="${optimize}">
			<classpath refid="build.classpath" />
		</javac>
	</target>


	<!-- =================================================================== -->
	<!-- Creates scriptographer.jar and loader.jar in the lib-directory      -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile">
		<copy todir="${build.classes}/com/scriptographer/cmm">
			<fileset dir="${build.src}/com/scriptographer/cmm">
				<include name="**/*.icc" />
			</fileset>
		</copy>
		<jar jarfile="${build.lib}/${jar.name}.jar"
			basedir="${build.classes}"
			excludes="**/loader/**,**/test/**"/>
		<jar jarfile="${build.dir}/loader.jar"
			basedir="${build.classes}"
			includes="**/loader/**"/>
	</target>

	<!-- =================================================================== -->
	<!-- Installs the jar files in the Illustrator directory                 -->
	<!-- =================================================================== -->
	<target name="install" depends="jar">
		<copy file="${build.dir}/loader.jar" todir="${install.dir}/"/>
		<copy file="${build.lib}/${jar.name}.jar" todir="${install.lib}/"/>
	</target>

	<!-- =================================================================== -->
	<!-- Copy classes to the Illustrator directory                           -->
	<!-- =================================================================== -->
	<target name="copyclasses" depends="compile">
		<copy todir="${install.classes}">
			<fileset dir="${build.classes}">
				<include name="**" />
				<exclude name="**/loader/**"/>
			</fileset>
		</copy>
	</target>

	<!-- =================================================================== -->
	<!-- Installs the jar files in the Illustrator directory                 -->
	<!-- =================================================================== -->
	<target name="packages" depends="jar,jsdocs">
		<mkdir dir="${build.packages}"/>

		<mkdir dir="${build.packages}/Scriptographer"/>
		<mkdir dir="${build.packages}/Scriptographer/java"/>
		<copy file="${build.dir}/loader.jar" todir="${build.packages}/Scriptographer/java"/>
		<copy todir="${build.packages}/Scriptographer/java/lib">
			<fileset dir="${build.lib}">
				<include name="**/${jar.name}.jar"/>
				<include name="**/js.jar"/>
			</fileset>
		</copy>
		<copy todir="${build.packages}/Scriptographer/doc">
			<fileset dir="${docs.js.dir}"/>
		</copy>
		<!-- On Mac OS X, use ditto for copying the Plugin and generating a zip file, so the data-forks are preserved -->
		<exec executable="ditto" os="Mac OS X">
			<arg file="${home.dir}/build/mac/build/cs1/release/Scriptographer"/>
			<arg path="${build.packages}/Scriptographer/"/>
		</exec>
		<exec executable="ditto" os="Mac OS X">
			<arg line="-c -k"/>
			<arg path="${build.packages}/Scriptographer"/>
			<arg path="${build.packages}/Scriptographer_Mac_CS1_${date}.zip"/>
		</exec>
		
		<!-- remove the plugin file again, in order to copy the CS2 one -->
		<delete includeEmptyDirs="true">
			<fileset dir="${build.packages}" includes="**/Scriptographer/Scriptographer*"/>
		</delete>
		
		<exec executable="ditto" os="Mac OS X">
			<arg path="${home.dir}/build/mac/build/cs2/release/Scriptographer.aip"/>
			<arg path="${build.packages}/Scriptographer/Scriptographer.aip"/>
		</exec>
		<exec executable="ditto" os="Mac OS X">
			<arg line="-c -k"/>
			<arg path="${build.packages}/Scriptographer"/>
			<arg path="${build.packages}/Scriptographer_Mac_CS2_${date}.zip"/>
		</exec>

		<!-- remove everything except the archives -->
		<delete includeEmptyDirs="true">
			<fileset dir="${build.packages}" excludes="**/Scriptographer*.zip"/>
		</delete>
	</target>

	<!-- =================================================================== -->
	<!-- Compiles the source directory                                       -->
	<!-- =================================================================== -->
	<target name="jni" depends="compile">
		<mkdir dir="${build.jni}"/>
		<javah destdir="${build.jni}" classpath="${build.classes}">
			<classpath refid="build.classpath" />

			<class name="com.scriptographer.ScriptographerEngine" />
			<class name="com.scriptographer.Key" />

			<class name="com.scriptographer.ai.Tool" />
			<class name="com.scriptographer.ai.Art" />
			<class name="com.scriptographer.ai.Path" />
			<class name="com.scriptographer.ai.PathStyle" />
			<class name="com.scriptographer.ai.Group" />
			<class name="com.scriptographer.ai.Raster" />
			<class name="com.scriptographer.ai.SegmentList" />
			<class name="com.scriptographer.ai.Curve" />
			<class name="com.scriptographer.ai.ArtSet" />
			<class name="com.scriptographer.ai.Layer" />
			<class name="com.scriptographer.ai.LayerList" />
			<class name="com.scriptographer.ai.Document" />
			<class name="com.scriptographer.ai.DocumentList" />
			<class name="com.scriptographer.ai.View" />
			<class name="com.scriptographer.ai.ViewList" />
			<class name="com.scriptographer.ai.Color" />
			<class name="com.scriptographer.ai.Pathfinder" />
			<class name="com.scriptographer.ai.LiveEffect" />
			<class name="com.scriptographer.ai.MenuItem" />
			<class name="com.scriptographer.ai.MenuGroup" />
			<class name="com.scriptographer.ai.Timer" />
			<class name="com.scriptographer.ai.Annotator" />
			<class name="com.scriptographer.ai.TextFrame" />
			<class name="com.scriptographer.ai.PointText" />
			<class name="com.scriptographer.ai.AreaText" />
			<class name="com.scriptographer.ai.PathText" />
			<class name="com.scriptographer.ai.TextRange" />
			<class name="com.scriptographer.ai.TextStory" />
			<class name="com.scriptographer.ai.TextStoryList" />
			<class name="com.scriptographer.ai.CharacterStyle" />
			<class name="com.scriptographer.ai.ParagraphStyle" />
			<class name="com.scriptographer.ai.FontList" />
			<class name="com.scriptographer.ai.FontFamily" />
			<class name="com.scriptographer.ai.FontWeight" />

			<class name="com.scriptographer.adm.Notifier" />
			<class name="com.scriptographer.adm.Dialog" />
			<class name="com.scriptographer.adm.ModalDialog" />
			<class name="com.scriptographer.adm.Item" />
		   	<class name="com.scriptographer.adm.ValueItem" />
		   	<class name="com.scriptographer.adm.TextValueItem" />
		   	<class name="com.scriptographer.adm.TextItem" />
		   	<class name="com.scriptographer.adm.Button" />
			<class name="com.scriptographer.adm.ToggleItem" />
			<class name="com.scriptographer.adm.ItemGroup" />
		   	<class name="com.scriptographer.adm.ImageStatic" />
		   	<class name="com.scriptographer.adm.TextEdit" />

		   	<class name="com.scriptographer.adm.ListItem" />
		   	<class name="com.scriptographer.adm.ListEntry" />
		   	<class name="com.scriptographer.adm.HierarchyList" />
		   	<class name="com.scriptographer.adm.HierarchyListEntry" />
			
		   	<class name="com.scriptographer.adm.Drawer" />
		   	<class name="com.scriptographer.adm.Image" />
		   	<class name="com.scriptographer.adm.Tracker" />
		</javah>
		<echo id="echo" level="info" />
		<script language="javascript" src="jni.js">
		<![CDATA[
			// create registerNatives.cpp by parsing the generated files by javah, see jni.js:
			registerNatives(project.getProperty("build.jni"), project.getProperty("build.jni") + "/registerNatives.cpp");
		]]>
		</script>
	</target>

			
	<!-- =================================================================== -->
	<!-- Compiles the source directory                                       -->
	<!-- =================================================================== -->
	<target name="jnibodies" depends="jni">
		<script language="javascript" src="jni.js">
		<![CDATA[
			// create jni bodies by parsing the generated files by javah, see jni.js:
			createJniBodies(project.getProperty("build.jni"));
		]]>
		</script>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the API documentation                                       -->
	<!-- =================================================================== -->
	<target name="javadocs" depends="init">
		<mkdir dir="${docs.api.dir}"/>
		<javadoc packagenames="com.scriptographer.*"
  				sourcepathref="build.sourcepath"
				destdir="${docs.api.dir}"
				author="false"
				version="false"
				private="false"
				windowtitle="${Name} ${version} API"
				classpathref="build.classpath">
		    <doctitle><![CDATA[${Name} ${version} API]]></doctitle>
		    <bottom><![CDATA[Copyright &#169; ${year} J&uuml;rg Lehni, Scratchdisk.com. All Rights Reserved.]]></bottom>
		</javadoc>
	</target>

	<!-- "java.awt.geom.*,com.scriptographer,com.scriptographer.ai.*,com.scriptographer.adm.*" -->
	<target name="jsdoclet">
		<mkdir dir="${destdir}"/>
		<javadoc packagenames="com.scriptographer.*"
				sourcepathref="build.sourcepath"
				destdir="${destdir}"
				author="false"
				version="false"
				public="true"
				windowtitle="${Name} ${version} API"
				classpathref="build.classpath">
		    <doctitle><![CDATA[${Name} ${version} API]]></doctitle>
			<bottom><![CDATA[Copyright &#169; ${year} J&uuml;rg Lehni, Scratchdisk.com. All Rights Reserved.]]></bottom>
			<doclet name="com.scriptographer.doclets.JSDoclet" path="${build.classes}">
				<param name="-basepackage" value="com.scriptographer"/>
				<param name="-filterclasses" value="
					com.scriptographer.Commitable
					com.scriptographer.CommitManager
					com.scriptographer.ConsoleOutputStream
					com.scriptographer.ConsoleOutputWriter
					com.scriptographer.GlobalObject
					com.scriptographer.ScriptographerEngine
					com.scriptographer.ScriptographerException
					com.scriptographer.Test
					com.scriptographer.ai.DictionaryObject
					com.scriptographer.ai.SegmentPoint
					com.scriptographer.ai.Tool
					com.scriptographer.ai.FileFormat
					com.scriptographer.test.*
					java.*
				"/>
				<param name="-packagesequence" value="
					com.scriptographer.ai
					com.scriptographer.adm
					com.scriptographer
				"/>
				<param name="-methodfilter" value="
					setWrapper
					getWrapper
					iterator
					hashCode
				"/>
				<param name="-templates" value="${templates}"/>
			</doclet>
		</javadoc>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the JS API documentation                                    -->
	<!-- =================================================================== -->
	<target name="jsdocs" depends="init">
		<antcall target="jsdoclet">
			<param name="templates" value="off"/>
			<param name="destdir" value="${docs.js.dir}"/>
		</antcall>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the JS API documentation as Templates for the Server        -->
	<!-- =================================================================== -->
	<target name="templatedocs" depends="init">
		<antcall target="jsdoclet">
			<param name="templates" value="on"/>
			<param name="destdir" value="${docs.js.templates.dir}"/>
		</antcall>
	</target>
</project>
